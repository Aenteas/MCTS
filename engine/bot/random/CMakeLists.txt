# This file has been generated by scripts/generate_cmake.py

project(random)

# export public include directory path
# we are using INSTALL(DIRECTORY) in the top level CMakeLists.txt file so we need to include the folder engine as well.
# include/engine/bot/random/*.h -> <install_prefix>/include/engine/bot/random/*.h
set(INCLUDE_DIRS "${INCLUDE_DIRS};${CMAKE_CURRENT_SOURCE_DIR}/include/engine" CACHE INTERNAL "")

# you can not use alias for install targets but the name should be unique so we use a namespace variable
# see https://stackoverflow.com/questions/67757157/change-exported-target-name-in-cmake-install-alias-to-a-target
set(NS ${MAIN_PROJECT}.engine.bot.random.)
# Global include directory
include_directories(${ROOT_BINARY_DIR}/include)

# create shared libraries
# interface library to provide path to the include dir
add_library(${NS}INTERFACE INTERFACE)
add_library(engine.bot.random.INTERFACE ALIAS ${NS}INTERFACE)

set(TARGETS "${TARGETS};${NS}INTERFACE" CACHE INTERNAL "")

target_include_directories(${NS}INTERFACE
  INTERFACE
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)

file(GLOB SOURCES "src/*.cpp")
foreach(SOURCE ${SOURCES})
  cmake_path(GET SOURCE STEM NAME)
  add_library(${NS}${NAME} SHARED include/engine/bot/random/${NAME}.h src/${NAME}.cpp)
  add_library(engine.bot.random.${NAME} ALIAS ${NS}${NAME})
  # add to the exported targets
  set(TARGETS "${TARGETS};${NS}${NAME}" CACHE INTERNAL "")

  target_include_directories(${NS}${NAME} 
    PUBLIC
      $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
      $<INSTALL_INTERFACE:include>
    PRIVATE
      $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include/engine/bot/random>
      $<INSTALL_INTERFACE:include/engine/bot/random>
  )
endforeach()

# create qt libraries
file(GLOB QTFILES "src/*.ui")
foreach(QTFILE ${QTFILES})
  cmake_path(GET QTFILE STEM NAME)
  add_library(ui_${NAME} src/${NAME}.ui)
endforeach()

file(GLOB QTFILES "apps/*.ui")
foreach(QTFILE ${QTFILES})
  cmake_path(GET QTFILE STEM NAME)
  add_library(ui_${NAME} apps/${NAME}.ui)
endforeach()

